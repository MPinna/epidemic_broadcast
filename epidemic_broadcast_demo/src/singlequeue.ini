[General]
network = SingleQueue
sim-time-limit = 1200s
repeat = 1 # 2 repetition, 2 differents hosts placements
seed-set = ${repetition} # 2 different random configurations
*.height = 100m #floorplan height
*.width = 100m #floorplan width
*.host[*].proc.slotLength = 1
*.host[*].wlan.mac.linkBroken.statistic-recording = false
*.host[*].wlan.mac.linkBroken.bin-recording = false
*.host[*].wlan.mac.passedUpPk.statistic-recording = false
*.host[*].wlan.mac.passedUpPk.scalar-recording = false
*.host[*].wlan.mac.passedUpPk.vector-recording = false
*.host[*].wlan.mac.sentDownPk.statistic-recording = false
*.host[*].wlan.mac.sentDownPk.scalar-recording = false
*.host[*].wlan.mac.sentDownPk.vector-recording = false
*.host[*].wlan.mac.rcvdPkFromHl.statistic-recording = false
*.host[*].wlan.mac.rcvdPkFromLl.statistic-recording = false
*.host[*].wlan.mac.packetDropInterfaceDown.statistic-recording = false
*.host[*].wlan.mac.packetDropNotAddressedToUs.statistic-recording = false
*.host[*].wlan.mac.packetDropIncorrectlyReceived.result-recording-modes = count
**.host[*].wlan.mac.queue.*.result-recording-modes = -
*.host[*].wlan.mac.queue.*.scalar-recording = false
*.host[*].wlan.radio.*.statistic-recording = false
*.host[*].wlan.radio.*.scalar-recording = false
*.host[*].wlan.radio.*.vector-recording = false


*.host[*].mobility.initialX = uniform(0m, 100m)	
*.host[*].mobility.initialY = uniform(0m, 100m)

# hosts positioning constraints
*.host[*].mobility.constraintAreaMinX = 0m
*.host[*].mobility.constraintAreaMinY = 0m
*.host[*].mobility.constraintAreaMinZ = 0m
*.host[*].mobility.constraintAreaMaxX = 100m
*.host[*].mobility.constraintAreaMaxY = 100m
*.host[*].mobility.constraintAreaMaxZ = 0m

*.radioMedium.rangeFilter =  "communicationRange"
*.radioMedium.neighborCache.typename="GridNeighborCache"
**.radioMedium.neighborCache.cellSizeX = 1m
**.radioMedium.neighborCache.cellSizeY = 1m
**.radioMedium.neighborCache.cellSizeZ = 0m
#*.radioMedium.neighborCache.range = 10m
#*.radioMedium.neighborCache.maxNumOfPointsPerQuadrant = 5000
*.radioMedium.neighborCache.refillPeriod = 10000s

*.visualizer.*.mediumVisualizer.displaySignals = true # waves visibility
*.visualizer.*.mediumVisualizer.signalFadingDistance = 13m # radq of the communication rage is good
*.visualizer.*.mediumVisualizer.displayCommunicationRanges = true # ranges circles



**.host[*].wlan.radio.typename = "UnitDiskRadio" # simple radio model
*.host[*].mobility.initFromDisplayString = false # ignore displaystring for position

*.host[*].wlan.radio.receiver.ignoreInterference = false	# interference is ignored for now
*.host[*].wlan.mac.useAck = false # don't sent ack
*.host[*].wlan.mac.fullDuplex = false # hosts can't transmit and receive at the same time
*.radioMedium.propagation.typename = "ConstantTimePropagation"


*.host[*].**.bitrate = 1Mbps # must be set, high enough to complete the transission inside 1 slot


*.host[*].proc.p=0.5

*.host[0].proc.hasInitToken=1 # give the initial token
*.host[0].stat="green" # set the status of the initial transmitter


*.host[*].mobility.typename = "StationaryMobility" #hosts are static

[Config single]
description = Single queue with 5 hosts evenly spaced on a line
*.numHosts = 5 #numer of hosts
repeat = 5 # 2 repetition, 2 differents hosts placements
seed-set = ${repetition} # 2 different randon configurations
# hosts initial Xs
*.host[0].mobility.initialX = 10m
*.host[1].mobility.initialX = 20m
*.host[2].mobility.initialX = 30m
*.host[3].mobility.initialX = 40m
*.host[4].mobility.initialX = 50m

# hosts initial Ys
*.host[*].mobility.initialY = 10m

*.host[*].wlan.radio.transmitter.communicationRange = 15m #communication range
*.visualizer.*.mediumVisualizer.signalFadingDistance = 4m # radq of the communication rage is good

[Config double]
description = 10 hosts evenly spaced on two lines
*.numHosts = 10 #number of hosts
repeat = 5 # 5 repetition
seed-set = ${repetition} # 2 different randon configurations

# hosts initial Xs

# hosts positioning constraints
*.host[*].mobility.constraintAreaMinX = 0m
*.host[*].mobility.constraintAreaMinY = 0m
*.host[*].mobility.constraintAreaMinZ = 0m
*.host[*].mobility.constraintAreaMaxX = 100m
*.host[*].mobility.constraintAreaMaxY = 100m
*.host[*].mobility.constraintAreaMaxZ = 0m


*.host[0].mobility.initialX = 10m
*.host[1].mobility.initialX = 20m
*.host[2].mobility.initialX = 30m
*.host[3].mobility.initialX = 40m
*.host[4].mobility.initialX = 50m
*.host[5].mobility.initialX = 10m
*.host[6].mobility.initialX = 20m
*.host[7].mobility.initialX = 30m
*.host[8].mobility.initialX = 40m
*.host[9].mobility.initialX = 50m

# hosts initial Ys
*.host[0].mobility.initialY = 45m
*.host[1].mobility.initialY = 45m
*.host[2].mobility.initialY = 45m
*.host[3].mobility.initialY = 45m
*.host[4].mobility.initialY = 45m
*.host[5].mobility.initialY = 55m
*.host[6].mobility.initialY = 55m
*.host[7].mobility.initialY = 55m
*.host[8].mobility.initialY = 55m
*.host[9].mobility.initialY = 55m

*.host[*].wlan.radio.transmitter.communicationRange = 15m #communication range
*.visualizer.*.mediumVisualizer.signalFadingDistance = 4m # radq of the communication rage is good

[Config randomGeneral]
description = N hosts randomly placed on the floorplan
*.radioMedium.mediumLimitCache.maxTransmissionDuration = 0.5s
*.host[*].wlan.radio.transmitter.communicationRange = 9m #communication range
*.visualizer.*.mediumVisualizer.signalFadingDistance = 3m # radq of the communication rage is good

[Config random2]
description = 20 hosts randomly placed on the floorplan
*.numHosts = 20 #numer of hosts

*.host[*].wlan.radio.transmitter.communicationRange = 25m #communication range
*.visualizer.*.mediumVisualizer.signalFadingDistance = 9m # radq of the communication rage is good


*.host[*].mobility.initialX = uniform(0m, 100m)	
*.host[*].mobility.initialY = uniform(0m, 100m)

[Config random3]
description = 30 hosts randomly placed on the floorplan
*.numHosts = 30 #numer of hosts

*.host[*].wlan.radio.transmitter.communicationRange = 80m #communication range
*.visualizer.*.mediumVisualizer.signalFadingDistance = 3m # radq of the communication rage is good

[Config Star1to5]

# displaying of the floorplan here should be fixed
# The simulation runs fine, but in the GUI users are
# outside the grey rectangle. It is just a matter of
# displaying, the logic running in the simulation
# is consistent
description = 5 pointed star with target in the middle
*.numHosts = 6 #numer of hosts

*.height = 200m #floorplan height
*.width = 200m #floorplan width


# hosts positioning constraints
*.host[*].mobility.constraintAreaMinX = 0m
*.host[*].mobility.constraintAreaMinY = 0m
*.host[*].mobility.constraintAreaMinZ = 0m
*.host[*].mobility.constraintAreaMaxX = 200m
*.host[*].mobility.constraintAreaMaxY = 200m
*.host[*].mobility.constraintAreaMaxZ = 0m

*.host[0].mobility.initialX = 100m
*.host[0].mobility.initialY = 100m

*.host[1].mobility.initialX = 200m
*.host[1].mobility.initialY = 100m

*.host[2].mobility.initialX = 130m
*.host[2].mobility.initialY = 5m

*.host[3].mobility.initialX = 20m
*.host[3].mobility.initialY = 42m

*.host[4].mobility.initialX = 20m
*.host[4].mobility.initialY = 158m

*.host[5].mobility.initialX = 130m
*.host[5].mobility.initialY = 195m

*.host[*].wlan.radio.transmitter.communicationRange = 110m #communication range
*.visualizer.*.mediumVisualizer.signalFadingDistance = 11m # radq of the communication rage is good

[Config Star5to1]
# same considerations as the previous one about
# displaying users and rectangle
description = 5 pointed star with target in the middle
*.numHosts = 6 #numer of hosts

*.height = 200m #floorplan height
*.width = 200m #floorplan width

# hosts positioning constraints
*.host[*].mobility.constraintAreaMinX = 0m
*.host[*].mobility.constraintAreaMinY = 0m
*.host[*].mobility.constraintAreaMinZ = 0m
*.host[*].mobility.constraintAreaMaxX = 200m
*.host[*].mobility.constraintAreaMaxY = 200m
*.host[*].mobility.constraintAreaMaxZ = 0m

*.host[0].mobility.initialX = 100m
*.host[0].mobility.initialY = 100m

*.host[1].mobility.initialX = 200m
*.host[1].mobility.initialY = 100m

*.host[2].mobility.initialX = 130m
*.host[2].mobility.initialY = 5m

*.host[3].mobility.initialX = 20m
*.host[3].mobility.initialY = 42m

*.host[4].mobility.initialX = 20m
*.host[4].mobility.initialY = 158m

*.host[5].mobility.initialX = 130m
*.host[5].mobility.initialY = 195m

*.host[*].wlan.radio.transmitter.communicationRange = 110m #communication range
*.visualizer.*.mediumVisualizer.signalFadingDistance = 11m # radq of the communication rage is good

*.host[0].proc.hasInitToken=0 # 
*.host[0].stat="yellow" # set the status of the initial transmitter

*.host[1].proc.hasInitToken=1 # give the initial token
*.host[1].stat="green" # set the status of the initial transmitter
*.host[2].proc.hasInitToken=1 # give the initial token
*.host[2].stat="green" # set the status of the initial transmitter
*.host[3].proc.hasInitToken=1 # give the initial token
*.host[3].stat="green" # set the status of the initial transmitter
*.host[4].proc.hasInitToken=1 # give the initial token
*.host[4].stat="green" # set the status of the initial transmitter
*.host[5].proc.hasInitToken=1 # give the initial token
*.host[5].stat="green" # set the status of the initial transmitter
*.host[*].proc.p=1


[Config randomBig]
description = 2000 hosts randomly placed on the floorplan
*.numHosts = 2000 #numer of hosts
*.radioMedium.mediumLimitCache.maxTransmissionDuration = 1s
*.height = 100m #floorplan height
*.width = 100m #floorplan width

# hosts positioning constraints
*.host[*].mobility.constraintAreaMinX = 0m
*.host[*].mobility.constraintAreaMinY = 0m
*.host[*].mobility.constraintAreaMinZ = 0m
*.host[*].mobility.constraintAreaMaxX = 100m
*.host[*].mobility.constraintAreaMaxY = 100m
*.host[*].mobility.constraintAreaMaxZ = 0m

*.host[*].wlan.radio.transmitter.communicationRange = 10m #communication range
*.visualizer.*.mediumVisualizer.signalFadingDistance = 3m # radq of the communication rage is good


*.host[*].mobility.initialX = uniform(0m, 100m)	
*.host[*].mobility.initialY = uniform(0m, 100m)

*.host[0].proc.hasInitToken=1 # give the initial token
*.host[0].stat="green" # set the status of the initial transmitter

*.host[*].proc.p=0.5

sim-time-limit = 10000s

[Config randomBigger]
description =  10000 hosts randomly placed on the floorplan
*.numHosts = 10000 #numer of hosts
*.height = 100m #floorplan height
*.width = 100m #floorplan width

# hosts positioning constraints
*.host[*].mobility.constraintAreaMinX = 0m
*.host[*].mobility.constraintAreaMinY = 0m
*.host[*].mobility.constraintAreaMinZ = 0m
*.host[*].mobility.constraintAreaMaxX = 100m
*.host[*].mobility.constraintAreaMaxY = 100m
*.host[*].mobility.constraintAreaMaxZ = 0m

*.host[*].wlan.radio.transmitter.communicationRange = 10m #communication range

*.radioMedium.mediumLimitCache.maxTransmissionDuration = 1s
*.visualizer.*.mediumVisualizer.signalFadingDistance = 3m # radq of the communication rage is good


*.host[*].mobility.initialX = uniform(0m, 100m)	
*.host[*].mobility.initialY = uniform(0m, 100m)

*.host[0].proc.hasInitToken=1 # give the initial token
*.host[0].stat="green" # set the status of the initial transmitter

*.host[*].proc.p=0.5

sim-time-limit = 10000s